<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>crackfree</title>
  <subtitle>认识世界，了解自己。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://crackfree.github.io/"/>
  <updated>2017-03-12T12:12:44.000Z</updated>
  <id>https://crackfree.github.io/</id>
  
  <author>
    <name>crackfree</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>git:深入理解git结构与概念</title>
    <link href="https://crackfree.github.io/2017/03/10/Depth-comprehension-of-git-structure-and-conception-md/"/>
    <id>https://crackfree.github.io/2017/03/10/Depth-comprehension-of-git-structure-and-conception-md/</id>
    <published>2017-03-10T12:42:28.000Z</published>
    <updated>2017-03-12T12:12:44.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;因计划每月必须写一篇博客。然而2月份没写。&lt;/p&gt;
&lt;h2 id=&quot;概念&quot;&gt;&lt;a href=&quot;#概念&quot; class=&quot;headerlink&quot; title=&quot;概念&quot;&gt;&lt;/a&gt;概念&lt;/h2&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;HEAD 物件: 类似C语言的指针，指向commit，每个head有个名字（branch 名或者 tag名等）。每个仓库默认有个head叫master。一个仓库可以含有任意数量的head。在同一时间只有一个被选中的head叫做当前head。当前head用HEAD(大写)表示。如果指向的不是最新的commit，此head为分离的head。在git文档中，head（小写）可以代表任何的head，HEAD（大写）代表当前head。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A head is simply a reference to a commit object. Each head has a name (branch name or tag name, etc). By default, there is a head in every repository called master. A repository can contain any number of heads. At any given time, one head is selected as the “current head.” This head is aliased to HEAD, always in capitals”.&lt;br&gt;Note this difference: a “head” (lowercase) refers to any one of the named heads in the repository; “HEAD” (uppercase) refers exclusively to the currently active head. This distinction is used frequently in Git documentation&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;blob 物件：就是工作目录中某个档案的”内容”，且只有内容而已，当你执行git add 指令的同时，这些新增档案的内容就会立刻被写入成为blob 物件，档名则是物件内容的杂凑运算结果，没有任何其他其他信息，像是档案时间、原本的档名或档案的其他资讯，都会储存在其他类型的物件里(也就是tree 物件)。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;tree 物件：这类物件会储存特定目录下的所有信息，包含该目录下的档名、对应的 blob 物件名称、档案连结(symbolic link) 或其他 tree 物件等等。由于 tree 物件可以包含其他 tree 物件，所以浏览 tree 物件的方式其实就跟档案系统中的 “资料夹” 没两样。简单来说，tree 物件这就是在特定版本下某个资料夹的快照(Snapshot)。&lt;/li&gt;
&lt;li&gt;commit 物件：用来记录有那些tree 物件包含在版本中，一个commit 物件代表着Git 的一次提交，记录着特定提交版本有哪些tree 物件、以及版本提交的时间、纪录讯息等等，通常还会记录上一层的commit 物件名称(只有第一次commit 的版本没有上层commit 物件名称。&lt;/li&gt;
&lt;li&gt;tag 物件：是一个容器，通常用来关联特定一个 commit 物件 (也可以关联到特定 blob、tree 物件)，并额外储存一些额外的参考信息(metadata)，例如: tag 名称。使用 tag 物件最常见的情况是替特定一个版本的 commit 物件标示一个易懂的名称，可能是代表某个特定发行的版本，或是拥有某个特殊意义的版本。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Git 会将每一个版本中的档案建立一个对应的blob 物件，一样的，该blob 物件的档名就是用上述的方式计算出来的，从这些blob 档案，你看不出跟版本有任何关系，你必须透过tree 物件(资料夹的快照) 与commit 物件(每一个版本的快照) 才能关联出这些blob 与版本的关系。&lt;/p&gt;
&lt;h2 id=&quot;结构&quot;&gt;&lt;a href=&quot;#结构&quot; class=&quot;headerlink&quot; title=&quot;结构&quot;&gt;&lt;/a&gt;结构&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;物件之间的关系：&lt;br&gt;&lt;img src=&quot;./fig-09-git-revisions.png&quot; alt=&quot;物件之间的关系&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;相关操作在结构中图解&quot;&gt;&lt;a href=&quot;#相关操作在结构中图解&quot; class=&quot;headerlink&quot; title=&quot;相关操作在结构中图解&quot;&gt;&lt;/a&gt;相关操作在结构中图解&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;./git-data-transport-commands.png&quot; alt=&quot;相关操作在结构中图解&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;文件状态变更与命令的关系&quot;&gt;&lt;a href=&quot;#文件状态变更与命令的关系&quot; class=&quot;headerlink&quot; title=&quot;文件状态变更与命令的关系&quot;&gt;&lt;/a&gt;文件状态变更与命令的关系&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;./file-status-lifecycle.png&quot; alt=&quot;文件状态变更与命令的关系&quot;&gt;&lt;/p&gt;
&lt;p&gt;透过指令改变文件的生命周期（状态），事实上，这些改变的过程，都是在更新 ”索引档”的过程。&lt;/p&gt;
&lt;h2 id=&quot;引用&quot;&gt;&lt;a href=&quot;#引用&quot; class=&quot;headerlink&quot; title=&quot;引用&quot;&gt;&lt;/a&gt;引用&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/2304087/what-is-head-in-git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://stackoverflow.com/questions/2304087/what-is-head-in-git&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;因计划每月必须写一篇博客。然而2月份没写。&lt;/p&gt;
&lt;h2 id=&quot;概念&quot;&gt;&lt;a href=&quot;#概念&quot; class=&quot;header
    
    </summary>
    
    
      <category term="git" scheme="https://crackfree.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>ansible入门与实战——配置文件、主机组与模块</title>
    <link href="https://crackfree.github.io/2017/01/27/newer-and-practise-of-ansible-inventory-module-and-configure-file/"/>
    <id>https://crackfree.github.io/2017/01/27/newer-and-practise-of-ansible-inventory-module-and-configure-file/</id>
    <published>2017-01-27T15:48:53.000Z</published>
    <updated>2017-02-16T16:34:27.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;“Ansible is Simple IT Automation”——简单的自动化IT工具。这个工具的目标有这么几项：让我们自动化部署APP；自动化管理配置项；自动化的持续交付；自动化的（AWS）云服务管理。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#安装&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo pip install ansible&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;构成与原理&quot;&gt;&lt;a href=&quot;#构成与原理&quot; class=&quot;headerlink&quot; title=&quot;构成与原理&quot;&gt;&lt;/a&gt;构成与原理&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;https://terry.im/wiki/terry/attachments/29786135/32800771.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://terry.im/wiki/terry/attachments/29786135/37552129.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;本质上批量的在远程服务器上执行命令 。&lt;br&gt;那么fabric和ansible有什么差别呢？简单来说fabric像是一个工具箱，提供了很多好用的工具，用来在Remote执行命令，而Ansible则是提供了一套简单的流程，你要按照它的流程来做，就能轻松完成任务。这就像是库和框架的关系一样。&lt;/p&gt;
&lt;p&gt;Asible基本组成 ：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;核心：ansible&lt;/li&gt;
&lt;li&gt;核心模块（Core Modules）：这些都是ansible自带的模块&lt;/li&gt;
&lt;li&gt;扩展模块（Custom Modules）：如果核心模块不足以完成某种功能，可以添加扩展模块&lt;/li&gt;
&lt;li&gt;主机组（Host Inventory）：定义ansible管理的主机&lt;/li&gt;
&lt;li&gt;插件（Plugins）：完成模块功能的补充&lt;/li&gt;
&lt;li&gt;剧本（Playbooks）：ansible的任务配置文件，将多个任务定义在剧本中，由ansible自动执行&lt;/li&gt;
&lt;li&gt;连接插件（Connectior Plugins）：ansible基于连接插件连接到各个主机上，虽然ansible是使用ssh连接到各个&lt;br&gt;主机的，但是它还支持其他的连接方法，所以需要有连接插件&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;配置文件&quot;&gt;&lt;a href=&quot;#配置文件&quot; class=&quot;headerlink&quot; title=&quot;配置文件&quot;&gt;&lt;/a&gt;配置文件&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;执行命令，ansible会按照如下配置文件位置的顺序，来搜寻配置文件。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;* ANSIBLE_CONFIG (环境变量)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* ansible.cfg (当前目录下)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* .ansible.cfg (用户家目录下)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* /etc/ansible/ansible.cfg&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;主机组&quot;&gt;&lt;a href=&quot;#主机组&quot; class=&quot;headerlink&quot; title=&quot;主机组&quot;&gt;&lt;/a&gt;主机组&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;定义ansible管理的主机，/etc/ansible/hosts 文件的格式与windows的ini配置文件类似:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mail.example.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[webservers]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;foo.example.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bar.example.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[dbservers]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;one.example.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;two.example.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;three.example.com&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;参数&lt;br&gt;Inventory 参数的说明&lt;br&gt;如同前面提到的,通过设置下面的参数,可以控制 ansible 与远程主机的交互方式,其中一些我们已经讲到过:&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ansible_ssh_host&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      将要连接的远程主机名.与你想要设定的主机的别名不同的话,可通过此变量设置.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ansible_ssh_port&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ssh端口号.如果不是默认的端口号,通过此变量设置.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ansible_ssh_user&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      默认的 ssh 用户名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ansible_ssh_pass&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ssh 密码(这种方式并不安全,我们强烈建议使用 --ask-pass 或 SSH 密钥)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ansible_sudo_pass&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      sudo 密码(这种方式并不安全,我们强烈建议使用 --ask-sudo-pass)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ansible_sudo_exe (new in version 1.8)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      sudo 命令路径(适用于1.8及以上版本)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ansible_connection&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      与主机的连接类型.比如:local, ssh 或者 paramiko. Ansible 1.2 以前默认使用 paramiko.1.2 以后默认使用 &amp;apos;smart&amp;apos;,&amp;apos;smart&amp;apos; 方式会根据是否支持 ControlPersist, 来判断&amp;apos;ssh&amp;apos; 方式是否可行.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ansible_ssh_private_key_file&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ssh 使用的私钥文件.适用于有多个密钥,而你不想使用 SSH 代理的情况.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ansible_shell_type&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      目标系统的shell类型.默认情况下,命令的执行使用 &amp;apos;sh&amp;apos; 语法,可设置为 &amp;apos;csh&amp;apos; 或 &amp;apos;fish&amp;apos;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ansible_python_interpreter&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      目标主机的 python 路径.适用于的情况: 系统中有多个 Python, 或者命令路径不是&amp;quot;/usr/bin/python&amp;quot;,比如  \*BSD, 或者 /usr/bin/python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      不是 2.X 版本的 Python.我们不使用 &amp;quot;/usr/bin/env&amp;quot; 机制,因为这要求远程用户的路径设置正确,且要求 &amp;quot;python&amp;quot; 可执行程序名不可为 python以外的名字(实际有可能名为python26).与 ansible_python_interpreter 的工作方式相同,可设定如 ruby 或 perl 的路径...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;主机文件的例子&quot;&gt;&lt;a href=&quot;#主机文件的例子&quot; class=&quot;headerlink&quot; title=&quot;主机文件的例子:&quot;&gt;&lt;/a&gt;主机文件的例子:&lt;/h3&gt;&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;some_host         ansible_ssh_port=2222     ansible_ssh_user=manager&lt;br&gt;aws_host          ansible_ssh_private_key_file=/home/example/.ssh/aws.pem&lt;br&gt;freebsd_host      ansible_python_interpreter=/usr/local/bin/python&lt;br&gt;ruby_module_host  ansible_ruby_interpreter=/usr/bin/ruby.1.9.3&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;模块&quot;&gt;&lt;a href=&quot;#模块&quot; class=&quot;headerlink&quot; title=&quot;模块&quot;&gt;&lt;/a&gt;模块&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;模型类型如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Cloud Modules&lt;/li&gt;
&lt;li&gt;Clustering Modules&lt;/li&gt;
&lt;li&gt;Commands Modules&lt;/li&gt;
&lt;li&gt;Crypto Modules&lt;/li&gt;
&lt;li&gt;Database Modules&lt;/li&gt;
&lt;li&gt;Files Modules&lt;/li&gt;
&lt;li&gt;Identity Modules&lt;/li&gt;
&lt;li&gt;Inventory Modules&lt;/li&gt;
&lt;li&gt;Messaging Modules&lt;/li&gt;
&lt;li&gt;Monitoring Modules&lt;/li&gt;
&lt;li&gt;Network Modules&lt;/li&gt;
&lt;li&gt;Notification Modules&lt;/li&gt;
&lt;li&gt;Packaging Modules&lt;/li&gt;
&lt;li&gt;Remote Management Modules&lt;/li&gt;
&lt;li&gt;Source Control Modules&lt;/li&gt;
&lt;li&gt;Storage Modules&lt;/li&gt;
&lt;li&gt;System Modules&lt;/li&gt;
&lt;li&gt;Utilities Modules&lt;/li&gt;
&lt;li&gt;Web Infrastructure Modules&lt;/li&gt;
&lt;li&gt;Windows Modules&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Commands-类模块&quot;&gt;&lt;a href=&quot;#Commands-类模块&quot; class=&quot;headerlink&quot; title=&quot;Commands 类模块&quot;&gt;&lt;/a&gt;Commands 类模块&lt;/h3&gt;&lt;hr&gt;
&lt;p&gt;包含如下子模块：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;command - Executes a command on a remote node&lt;/li&gt;
&lt;li&gt;expect - Executes a command and responds to prompts&lt;/li&gt;
&lt;li&gt;raw - Executes a low-down and dirty SSH command&lt;/li&gt;
&lt;li&gt;script - Runs a local script on a remote node after transferring it&lt;/li&gt;
&lt;li&gt;shell - Execute commands in nodes.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;测试raw模块&quot;&gt;&lt;a href=&quot;#测试raw模块&quot; class=&quot;headerlink&quot; title=&quot;测试raw模块&quot;&gt;&lt;/a&gt;测试raw模块&lt;/h4&gt;&lt;hr&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ansible vps -m raw  -a &amp;apos;echo 1&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vps1 | SUCCESS | rc=0 &amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vps2 | SUCCESS | rc=0 &amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vps3 | SUCCESS | rc=0 &amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;ansible-命令使用&quot;&gt;&lt;a href=&quot;#ansible-命令使用&quot; class=&quot;headerlink&quot; title=&quot;ansible 命令使用&quot;&gt;&lt;/a&gt;ansible 命令使用&lt;/h2&gt;&lt;hr&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ansible -i 主机组 -m 模块  -a &amp;apos;临时命令&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;“Ansible is Simple IT Automation”——简单的自动化IT工具。这个工具的目标有这么几项：让我们自动化
    
    </summary>
    
    
      <category term="ansible" scheme="https://crackfree.github.io/tags/ansible/"/>
    
  </entry>
  
  <entry>
    <title>vim 寄存器使用</title>
    <link href="https://crackfree.github.io/2017/01/05/vim-register-usage/"/>
    <id>https://crackfree.github.io/2017/01/05/vim-register-usage/</id>
    <published>2017-01-05T03:35:53.000Z</published>
    <updated>2017-01-09T15:38:28.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;使用vim需要粘贴复制的多了，系统剪贴板不能存多个值，vim中的寄存器能解决这个问题。&lt;/p&gt;
&lt;h2 id=&quot;寄存器分类&quot;&gt;&lt;a href=&quot;#寄存器分类&quot; class=&quot;headerlink&quot; title=&quot;寄存器分类&quot;&gt;&lt;/a&gt;寄存器分类&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;VIM中有9中类型的寄存器，寄存器的主要功能就是缓存操作过程中删除、复制、搜索等的文本内容，通过 :help registers命令查看寄存器的详细帮助说明，这里对类型翻译如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;未命名寄存器 “”  —— vim使用的默认寄存器，文本来源命令：d/c/s/x/y&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;10个数字命名寄存器 “0 - “9 —— vim缓存yank和delete行操作命令产生的文本&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;1个非行删除内容缓存寄存器 “- —— vim缓存delete操作在非行上时产生的文本&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;26个字母命名寄存器 “a - “z / “A - “Z —— 完全由用户指定内容的寄存器&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;4个只读寄存器 “. “% “# “:&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;表达式寄存器 “= —— 使用VIM强大的表达式功能（从来没用过，一点不懂）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;GUI选择寄存器 “* “+ “~ —— vim缓存在GUI中选择的文本&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;黑洞寄存器 “_ —— 类似Linux中的/dev/null文件，只进不出，可用来滤掉影响默认寄存器的内容&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;最后搜索模式寄存器 “/ —— 缓存在vim中使用过的最后的搜索内容&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;未命名寄存器（The Unnamed Register） 当使用y命令复制文本，或使用d、c、s、x命令删除文本时，文本将自动被放入””未命名寄存器。即使你在复制或删除文本时，已经指定了寄存器（例如使用”xdd命令），这些文本也将会被同时放入”x和””寄存器。&lt;/p&gt;
&lt;p&gt;数字寄存器（The Numbered Registers） “0始终存放最近删除的文本。”1也包含上次删除的文本。区别在于：”0不断被删除的文本所覆盖；而如果删除文本时，指定了寄存器或者文本小于一行，那么”1将不会被更新。 数字寄存器1-9可以看作是删除历史， 你可以从中找到早先删除的文本。比如你使用了三次dd命令，那么这三行文本被分别存放在寄存器1,2,3中，可以通过命令”1P,”2P,”3P将这些文本再粘贴回来。&lt;/p&gt;
&lt;p&gt;短删除寄存器（The Small Delete Register） 当删除少于一行的文本时，除非指定了某个寄存器，否则这些内容将会被放入”-短删除寄存器中。&lt;/p&gt;
&lt;p&gt;命名寄存器（The Named Registers） 当文本被放入以小写字母命名的寄存器（例如”a）时，该寄存器原有的内容将被覆盖；而使用以大写字母命名的寄存器（例如”A）时，将会把文本追加到原有内容之后。&lt;/p&gt;
&lt;p&gt;只读寄存器（The Read-Only Registers） 你只能从4个只读寄存器中粘贴内容，而不能放入文本。”%包含当前文件名；”#包含交替文件名；”.包含最近插入的文本；”:包含上次执行的命令行。&lt;/p&gt;
&lt;p&gt;表达式寄存器（The Expression Register） 当我们输入”=，就会在Vim底部显示一个以“＝”开始的提示行，可以在这里输入表达式并按回车键确认。随后使用命令p将表达式的结果粘贴到文本中。例如要在文本中插入38&lt;em&gt;56的值，首先进入命令模式，输入”=，在屏幕底部的提示行中输入“38&lt;/em&gt;56”并按回车，然后输入命令p，这样就可以将计算结果插入文本中了。在表达式寄存器中，不仅可以使用通常的算术运算符，还可以使用Vim特定的函数和运算符。例如通过表达式寄存器来得到环境变量的值（例如”=$HOME）。如果没有输入任何表达式而直接按回车键，那么Vim将执行最近使用过的表达式。&lt;/p&gt;
&lt;p&gt;选择和拖拽寄存器（The Selection and Drop Registers） 有3个寄存器用于保存选中的文本：”&lt;em&gt;用于访问系统剪切板。在Windows下，”&lt;/em&gt;和”+相同；在Linux下，”+包含选中的文本，”*包含复制的文本。使用”+y命令，可以将当前选中的文文本复制到系统剪切板中。而”+p命令，则可以粘贴系统剪切板中的内容。通过剪切板寄存器，能够在不同的Vim编辑器或者是其他应用程序之间，进行文本交换。”~包含上次从其它应用程序拖拽到Gvim中的文本。&lt;/p&gt;
&lt;p&gt;黑洞寄存器（The Black Hole Register） 任何放入”_中的文本都将不复存在。如果想要永久删除某些文本而不是将他放入1-9中的某个寄存中，就可以使用黑洞寄存器。例如：命令dd将删除一行文本并将其放入寄存器1中；而命令”_dd则将该行文本放入黑洞寄存器中，这些文本也就会永久消失了，而寄存器1中的文本会保持不变。&lt;/p&gt;
&lt;p&gt;搜索模式寄存器（Search Pattern Register） 当你通过/命令进行搜索时，所使用的模式将自动被放入”/寄存器。&lt;/p&gt;
&lt;p&gt;这些寄存器很多，那怎么来查看它们的内容呢？&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;查看寄存器中内容&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;:reg&lt;/p&gt;
&lt;p&gt;查看指定寄存器中内容&lt;/p&gt;
&lt;p&gt;:reg {register name}&lt;/p&gt;
&lt;h2 id=&quot;使用方法&quot;&gt;&lt;a href=&quot;#使用方法&quot; class=&quot;headerlink&quot; title=&quot;使用方法&quot;&gt;&lt;/a&gt;使用方法&lt;/h2&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;调取寄存器&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;NORMAL Mode：”{register_name}&lt;/li&gt;
&lt;li&gt;COMMAND MODE：&lt;c-r&gt;+”寄存器名称 （输入&lt;c-r&gt;后VIM会自动打出”寄存器引用符号。&lt;/c-r&gt;&lt;/c-r&gt;&lt;/li&gt;
&lt;li&gt;INSERT MODE：&lt;c-r&gt;+寄存器名称（无需输入寄存器引用符号”）&lt;/c-r&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;复制到寄存器&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在复制或删除文本时，可以使用”register命令将文本放入指定的寄存器中。例如以下命令，将复制的文本放到寄存器a中，同时文本也会被放入未命名寄存器中。&lt;/p&gt;
&lt;p&gt;“ayy&lt;/p&gt;
&lt;p&gt;如果再使用相应的大写字母来指定寄存器，那么会将当前行内容追加到寄存器a中，这时该寄存器中就有了两行文本。&lt;/p&gt;
&lt;p&gt;“Ayy&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;从寄存器粘贴&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;命令:put会将寄存中的内容粘贴到指定的文本行后面。使用以下命令，可以将寄存器中的内容粘贴到第五行的后面:&lt;/p&gt;
&lt;p&gt;:5put a&lt;/p&gt;
&lt;p&gt;如果要将文本放在这一行的前面，可以用以下命令：&lt;/p&gt;
&lt;p&gt;:5put! a&lt;/p&gt;
&lt;p&gt;你也可以使用p命令，将x寄存中的文本粘贴到光标之后：&lt;/p&gt;
&lt;p&gt;“xp&lt;/p&gt;
&lt;p&gt;而P命令，则将x寄存中的文本粘贴到光标之前：&lt;/p&gt;
&lt;p&gt;“xP&lt;/p&gt;
&lt;p&gt;如果直接使用p或P命令，而没有指明特定寄存器，那么将粘贴未命名寄存器中的内容。&lt;/p&gt;
&lt;p&gt;使用以下命令，可以粘贴上次插入的文本，方便你录入重复的内容：&lt;/p&gt;
&lt;p&gt;“.P&lt;/p&gt;
&lt;p&gt;如果要粘贴系统剪切板中的内容，在Insert mode下可以利用快捷键Shift+Ins，而在Normal mode下，可以使用以下命令：&lt;/p&gt;
&lt;p&gt;“*p&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;剪切板与自动缩进indent&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果开启了set autoindent，在粘贴具有格式缩进的文本时（如python程序），粘贴的结果将会是缩进混乱的，因为set autoindent的影响。&lt;br&gt;解决这个问题有两个方法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用set paste模式&lt;br&gt;开启paste模式后，autoindent等缩进功能将会被屏蔽，粘贴格式就会不受影响。&lt;br&gt;每次手工开启关闭paste模式将会比较麻烦，可以在_vimrc中为其设置一个快捷键，每次需要时按一下即可切换：set pastetoggle=&lt;f12&gt;&lt;/f12&gt;&lt;/li&gt;
&lt;li&gt;使用普通模式的”+p命令&lt;/li&gt;
&lt;li&gt;插入模式输入&lt;c-r&gt;&lt;c-p&gt;“+&lt;/c-p&gt;&lt;/c-r&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;参考链接&quot;&gt;&lt;a href=&quot;#参考链接&quot; class=&quot;headerlink&quot; title=&quot;参考链接&quot;&gt;&lt;/a&gt;参考链接&lt;/h2&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.jianshu.com/p/82b5eb3ae305&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.jianshu.com/p/82b5eb3ae305&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://my.oschina.net/shelllife/blog/144357&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://my.oschina.net/shelllife/blog/144357&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://liuzhijun.iteye.com/blog/1830931&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://liuzhijun.iteye.com/blog/1830931&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;使用vim需要粘贴复制的多了，系统剪贴板不能存多个值，vim中的寄存器能解决这个问题。&lt;/p&gt;
&lt;h2 id=&quot;寄存器分类&quot;&gt;&lt;a
    
    </summary>
    
    
      <category term="vim" scheme="https://crackfree.github.io/tags/vim/"/>
    
  </entry>
  
  <entry>
    <title>Linux下大硬盘分区与加密－使用GPT、LVM over LUKS</title>
    <link href="https://crackfree.github.io/2016/11/16/using-gpt-lvm-and-luks-to-part-big-disk-and-encrypt-it-in-Linux/"/>
    <id>https://crackfree.github.io/2016/11/16/using-gpt-lvm-and-luks-to-part-big-disk-and-encrypt-it-in-Linux/</id>
    <published>2016-11-16T13:50:55.000Z</published>
    <updated>2016-12-14T15:15:35.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;双十一买了块3T硬盘，今天有空折腾下，也记录下。&lt;br&gt;&lt;br&gt;本文用到的技术有GPT、LUKS、LVM、ext4。&lt;br&gt;&lt;br&gt;预定的结果为在使用GPT分区表的硬盘上，建立多个主分区。每个主分区使用LUKS整个分区加密。在加密的主分区内使用LVM建立多个所需的逻辑卷，简单的说为LVM over LUKS。 逻辑卷使用ext4格式格式化。&lt;br&gt;用一句话概括本文为ext4 over LVM over LUKS over GPT。&lt;/p&gt;
&lt;h2 id=&quot;分区&quot;&gt;&lt;a href=&quot;#分区&quot; class=&quot;headerlink&quot; title=&quot;分区&quot;&gt;&lt;/a&gt;分区&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;分区前先要确立分区表格式。&lt;br&gt;&lt;del&gt;因通常MBR分区表最大支持到2T&lt;/del&gt;，所以需要使用GPT分区表。GPT&lt;a href=&quot;https://zh.wikipedia.org/wiki/GUID%E7%A3%81%E7%A2%9F%E5%88%86%E5%89%B2%E8%A1%A8&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;维基百科&lt;/a&gt; &lt;br&gt;&lt;/p&gt;
&lt;p&gt;刚才看来wiki,西数与洗劫盘，使用MBR分区技术可以支持到16T。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;对于那些扇区为512字节的磁盘，MBR分区表不支持容量大于2.2TB（2.2×1012字节）[1]的分区，然而，一些硬盘制造商（诸如希捷和西部数据）注意到这个局限性，并且将他们的容量较大的磁盘升级到4KB的扇区，这意味着MBR的有效容量上限提升到16 TiB。 这个看似“正确的”解决方案，在临时地降低人们对改进磁盘分配表的需求的同时，也给市场带来关于在有较大的块（block）的设备上从BIOS启动时，如何最佳的划分磁盘分区的困惑。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;使用GPT分区比MBR分区有如下优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;主分区数目多，GPT最多128个,MBR 4个&lt;/li&gt;
&lt;li&gt;安全性高，便于数据恢复，GPT将分区信息在每个分区首尾都存放一遍，MBR分区表只存一处，万一分区信息损坏,GPT恢复概率更高&lt;/li&gt;
&lt;li&gt;大容量支持，MBR使用512B扇区大小最多2.2T，4K扇区大小16T，GPT 9.4ZB&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;缺点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;兼容性，见&lt;a href=&quot;https://zh.wikipedia.org/wiki/GUID%E7%A3%81%E7%A2%9F%E5%88%86%E5%89%B2%E8%A1%A8#.E6.93.8D.E4.BD.9C.E7.B3.BB.E7.BB.9F.E6.94.AF.E6.8C.81&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;维基百科操作系统支持&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;本文因需求使用GPT分区表，分区之前做了如下规划：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;分区&lt;/th&gt;
&lt;th style=&quot;text-align:right&quot;&gt;大小&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;2T&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;0.7T&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;找到要分区的硬盘，如下sdc&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# lsblk&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NAME                         MAJ:MIN RM   SIZE RO TYPE  MOUNTPOINT&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sdc                            8:32   0   2.7T  0 disk&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用parted指定分区格式&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# parted  /dev/sdc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;GNU Parted &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Using /dev/sdc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Welcome to GNU Parted! Type &amp;apos;help&amp;apos; to view a list of commands.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(parted) mklabel gpt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(parted) print free&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Model: TO Exter nal USB 3.0 (scsi)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Disk /dev/sdc: 3001GB&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Sector size (logical/physical): 512B/4096B&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Partition Table: gpt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Number  Start   End     Size    File system  Name  Flags&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                17.4kB  3001GB  3001GB  Free Space&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;创建一个主分区&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(parted) mkpart primary  0%  74%&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;创建另外一个主分区&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(parted) mkpart primary 74% 100%&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;查看之前创建的分区&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(parted) print free&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Model: TO Exter nal USB 3.0 (scsi)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Disk /dev/sdc: 3001GB&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Sector size (logical/physical): 512B/4096B&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Partition Table: gpt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Number  Start   End     Size    File system  Name     Flags&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        17.4kB  33.6MB  33.5MB  Free Space&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 1      33.6MB  2220GB  2220GB               primary&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 2      2220GB  3001GB  780GB                primary&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        3001GB  3001GB  115kB   Free Space&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;运气不错没有出现&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Warning: The resulting partition is not properly aligned for best performance.&lt;br&gt;Ignore/Cancel?&lt;br&gt;&lt;br&gt;&lt;br&gt;如果出现参照：&lt;a href=&quot;http://rainbow.chard.org/2013/01/30/how-to-align-partitions-for-best-performance-using-parted/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;链接&lt;/a&gt;解决&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;加密&quot;&gt;&lt;a href=&quot;#加密&quot; class=&quot;headerlink&quot; title=&quot;加密&quot;&gt;&lt;/a&gt;加密&lt;/h2&gt;&lt;hr&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;创建加密容器　用 LUKS 方式格式化分区 &lt;/p&gt;
 &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# sudo cryptsetup luksFormat /dev/sdc2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;WARNING!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;========&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;This will overwrite data on /dev/sdc2 irrevocably.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Are you sure? (Type uppercase yes): YES (输入大写的YES)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Enter passphrase: (输入密码)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Verify passphrase:&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;打开加密盘&lt;/p&gt;
 &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cryptsetup luksOpen /dev/sdc2 westdata-hd2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Enter passphrase for /dev/sdc2:&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; 打开之后，该虚拟盘会被映射到 /dev/mapper/westdata-hd2&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;开机自动挂载加密容器&lt;br&gt; 创建添加keyfile&lt;/p&gt;
 &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;dd if=/dev/urandom of=keyfile bs=1k count=4 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4+0 records in &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4+0 records out &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4096 bytes (4.1 kB) copied, 0.00206882 s, 2.0 MB/s &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cryptsetup luksAddKey /dev/sdc2 keyfile &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Enter any passphrase:&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; 添加自动挂载&lt;/p&gt;
 &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vim /etc/crypttab  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;westdata-hd2    /dev/sdc2       keyfilepath   luks &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vim /etc/fstab&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/dev/mapper/name        keyfile                   ext4    _netdev         0 0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;添加/移除/修改LUKS密码 &lt;/p&gt;
 &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#cryptsetup luksAddKey /dev/sdc2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Enter any passphrase:  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Enter new passphrase for key slot:  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Verify passphrase:  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#cryptsetup luksRemoveKey /dev/sdc2 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Enter LUKS passphrase to be deleted:  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#cryptsetup luksAddKey /dev/sdc2 keyfile &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Enter any passphrase:&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;LVM分区&quot;&gt;&lt;a href=&quot;#LVM分区&quot; class=&quot;headerlink&quot; title=&quot;LVM分区&quot;&gt;&lt;/a&gt;LVM分区&lt;/h2&gt;&lt;hr&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;创建pv&lt;/p&gt;
 &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pvcreate  /dev/mapper/westdata-hd2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Physical volume &amp;quot;/dev/mapper/westdata-hd2&amp;quot; successfully created&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; 查看已有pv&lt;/p&gt;
 &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pvs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PV                       VG      Fmt  Attr PSize   PFree  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;..........&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/dev/mapper/westdata-hd2         lvm2 a--  726.55g 726.55g&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;创建vg(卷组)&lt;/p&gt;
 &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vgcreate  vg-westdata2  /dev/mapper/westdata-hd2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Volume group &amp;quot;vg-westdata&amp;quot; successfully created&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;创建lv(逻辑卷)&lt;/p&gt;
 &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;lvcreate   -l  100%VG   -n lv-westdata2 vg-westdata2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Logical volume &amp;quot;lv-westdata2&amp;quot; created&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; 显示已有lv&lt;/p&gt;
 &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;lvdisplay &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --- Logical volume ---&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  LV Path                /dev/vg-westdata2/lv-westdata2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  LV Name                lv-westdata2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  VG Name                vg-westdata2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  LV UUID                P1grmT-SWx5-QyeP-fnbw-18wW-w9uN-V2eVze&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  LV Write Access        read/write&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  LV Creation host, time  2016-12-12 00:41:53 +0800&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  LV Status              available&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  # open                 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  LV Size                726.55 GiB&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Current LE             185996&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Segments               1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Allocation             inherit&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Read ahead sectors     auto&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  - currently set to     256&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Block device           252:8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;格式化逻辑卷&lt;/p&gt;
 &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mkfs.ext4 /dev/vg-westdata2/lv-westdata2 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mke2fs 1.42.9 (4-Feb-2014)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Filesystem label=&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;OS type: Linux&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Block size=4096 (log=2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Fragment size=4096 (log=2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Stride=0 blocks, Stripe width=0 blocks&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47620096 inodes, 190459904 blocks&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9522995 blocks (5.00%) reserved for the super user&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;First data block=0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Maximum filesystem blocks=4294967296&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5813 block groups&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32768 blocks per group, 32768 fragments per group&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8192 inodes per group&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Superblock backups stored on blocks: &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	4096000, 7962624, 11239424, 20480000, 23887872, 71663616, 78675968, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	102400000&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Allocating group tables: done                            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Writing inode tables: done                            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Creating journal (32768 blocks): done&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Writing superblocks and filesystem accounting information: done&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;挂载逻辑卷&lt;/p&gt;
 &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mkdir /media/test&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mount /dev/vg-westdata2/lv-westdata2  /media/test&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;逻辑卷自动挂载&lt;/p&gt;
 &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vim /etc/fstab&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/dev/vg-westdata2/lv-westdata2      /media/test                  ext4    _netdev         0 0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;关闭加密盘&quot;&gt;&lt;a href=&quot;#关闭加密盘&quot; class=&quot;headerlink&quot; title=&quot;关闭加密盘&quot;&gt;&lt;/a&gt;关闭加密盘&lt;/h2&gt;&lt;hr&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;卸载逻辑卷&lt;/p&gt;
 &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;umount /dev/vg-westdata2/test&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;关闭加密盘&lt;/p&gt;
 &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cryptsetup luksClose westdata-hd2 (之前打开容器后面跟的名称)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;引用&quot;&gt;&lt;a href=&quot;#引用&quot; class=&quot;headerlink&quot; title=&quot;引用&quot;&gt;&lt;/a&gt;引用&lt;/h2&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/GUID%E7%A3%81%E7%A2%9F%E5%88%86%E5%89%B2%E8%A1%A8&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;    维基百科&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;双十一买了块3T硬盘，今天有空折腾下，也记录下。&lt;br&gt;&lt;br&gt;本文用到的技术有GPT、LUKS、LVM、ext4。&lt;br&gt;&lt;br
    
    </summary>
    
    
      <category term="GPT" scheme="https://crackfree.github.io/tags/GPT/"/>
    
      <category term="LVM" scheme="https://crackfree.github.io/tags/LVM/"/>
    
      <category term="LUKS" scheme="https://crackfree.github.io/tags/LUKS/"/>
    
      <category term="part" scheme="https://crackfree.github.io/tags/part/"/>
    
      <category term="dmcrypt" scheme="https://crackfree.github.io/tags/dmcrypt/"/>
    
  </entry>
  
  <entry>
    <title>Centos 升级glibc</title>
    <link href="https://crackfree.github.io/2016/10/01/glibc-upgrade/"/>
    <id>https://crackfree.github.io/2016/10/01/glibc-upgrade/</id>
    <published>2016-10-01T08:37:43.000Z</published>
    <updated>2016-10-01T11:45:00.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;Centos-升级glibc&quot;&gt;&lt;a href=&quot;#Centos-升级glibc&quot; class=&quot;headerlink&quot; title=&quot;Centos 升级glibc&quot;&gt;&lt;/a&gt;Centos 升级glibc&lt;/h1&gt;&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;刚升级了glibc,整理网上文章如下&lt;/p&gt;
&lt;h3 id=&quot;glibc简介&quot;&gt;&lt;a href=&quot;#glibc简介&quot; class=&quot;headerlink&quot; title=&quot;glibc简介&quot;&gt;&lt;/a&gt;glibc简介&lt;/h3&gt;&lt;hr&gt;
&lt;p&gt;glibc是GNU发布的libc库，即c运行库。glibc是linux系统中最底层的api，几乎其它任何运行库都会依赖于glibc。glibc除了封装linux操作系统所提供的系统服务外，它本身也提供了许多其它一些必要功能服务的实现。由于 glibc 囊括了几乎所有的 UNIX 通行的标准，可以想见其内容包罗万象。而就像其他的 UNIX 系统一样，其内含的档案群分散于系统的树状目录结构中，像一个支架一般撑起整个操作系统。&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;a href=&quot;http://baike.baidu.com/view/1323132.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;百科&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;为什么要升级&quot;&gt;&lt;a href=&quot;#为什么要升级&quot; class=&quot;headerlink&quot; title=&quot;为什么要升级&quot;&gt;&lt;/a&gt;为什么要升级&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;查看系统glibc库版本可使用如下命令:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ strings /lib64/libc.so.6 |grep GLIBC_&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Centos 为了稳定使用的glibc版本通常比较低。而安装有些程序需要依赖新版本。升级glibc需要慎重，因很多人升级失败后导致系统不能用了。&lt;/p&gt;
&lt;p&gt;如果升级基本C运行库到一个太新的版本，可能会影响CentOS的运行。所以大家如果遇到CentOS基本库的问题，影响了自己程序的运行，应该可以考虑：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;在低版本的系统编译自己的产品，如果自己的产品确实不需要新版才支持的新特性&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;用版本高的系统来编译，比如ubuntu，和centos的新版，但可能需要部署到较低版本，那么可以考虑用mock等技术制作更好的安装包，把依赖打入包内&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;利用容器技术，如Docker，在低版本的操作系统内，轻量级的隔离出一个虚拟运行环境，适应你的程序。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;升级过程&quot;&gt;&lt;a href=&quot;#升级过程&quot; class=&quot;headerlink&quot; title=&quot;升级过程&quot;&gt;&lt;/a&gt;升级过程&lt;/h2&gt;&lt;hr&gt;
&lt;h3 id=&quot;选择版本下载安装包&quot;&gt;&lt;a href=&quot;#选择版本下载安装包&quot; class=&quot;headerlink&quot; title=&quot;选择版本下载安装包&quot;&gt;&lt;/a&gt;选择版本下载安装包&lt;/h3&gt;&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;https://ftp.gnu.org/gnu/glibc/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://ftp.gnu.org/gnu/glibc/&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;wget http://ftp.gnu.org/gnu/glibc/glibc-2.15.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#解压&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tar xvf glibc-2.15.tar.gz&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;安装gcc&quot;&gt;&lt;a href=&quot;#安装gcc&quot; class=&quot;headerlink&quot; title=&quot;安装gcc&quot;&gt;&lt;/a&gt;安装gcc&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;yum -y install gcc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;编译&quot;&gt;&lt;a href=&quot;#编译&quot; class=&quot;headerlink&quot; title=&quot;编译&quot;&gt;&lt;/a&gt;编译&lt;/h3&gt;&lt;hr&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mkdir build&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd build&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;../configure --prefix=/opt/glibc-2.15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;glibc软链&quot;&gt;&lt;a href=&quot;#glibc软链&quot; class=&quot;headerlink&quot; title=&quot;glibc软链&quot;&gt;&lt;/a&gt;glibc软链&lt;/h3&gt;&lt;hr&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;rm -rf /lib64/libc.so.6 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LD_PRELOAD=/opt/glibc-2.15/lib/libc-2.15.so ln -s /opt/glibc-2.15/lib/libc-2.15.so /lib64/libc.so.6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;glibc升级失败回滚方法&quot;&gt;&lt;a href=&quot;#glibc升级失败回滚方法&quot; class=&quot;headerlink&quot; title=&quot;glibc升级失败回滚方法&quot;&gt;&lt;/a&gt;glibc升级失败回滚方法&lt;/h3&gt;&lt;hr&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;LD_PRELOAD=/lib64/libc-2.12.so ln -s /lib64/libc-2.12.so /lib64/libc.so.6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;相关原理&quot;&gt;&lt;a href=&quot;#相关原理&quot; class=&quot;headerlink&quot; title=&quot;相关原理&quot;&gt;&lt;/a&gt;相关原理&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;glibc在linux下是个软链接。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ ll /lib64/libc.so.6  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;lrwxrwxrwx 1 root root 19 Sep 23 08:29 /lib64/libc.so.6 -&amp;gt; /lib64/libc-2.12.so&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上面做的事情是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;把新的glibc编译好了。&lt;/li&gt;
&lt;li&gt;然后，把旧的删除，新的换上去。&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;strong&gt;因为ln命令本身依赖glibc库，前面删除glibc软链之后需要使用：&lt;/strong&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;LD_PRELOAD=/opt/glibc-2.15/lib/libc-2.15.so ln -s /opt/glibc-2.15/lib/libc-2.15.so /lib64/libc.so.6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;手工指定glibc库的位置来完成ln命令执行。&lt;/p&gt;
&lt;h2 id=&quot;相关链接&quot;&gt;&lt;a href=&quot;#相关链接&quot; class=&quot;headerlink&quot; title=&quot;相关链接&quot;&gt;&lt;/a&gt;相关链接&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://m.blog.csdn.net/article/details?id=52033950&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://m.blog.csdn.net/article/details?id=52033950&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://blog.csdn.net/officercat/article/details/39520227&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.csdn.net/officercat/article/details/39520227&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Centos-升级glibc&quot;&gt;&lt;a href=&quot;#Centos-升级glibc&quot; class=&quot;headerlink&quot; title=&quot;Centos 升级glibc&quot;&gt;&lt;/a&gt;Centos 升级glibc&lt;/h1&gt;&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot;
    
    </summary>
    
    
      <category term="linux" scheme="https://crackfree.github.io/tags/linux/"/>
    
      <category term="glibc" scheme="https://crackfree.github.io/tags/glibc/"/>
    
  </entry>
  
  <entry>
    <title>cat xx.iso &gt; /dev/sdX 启动原理</title>
    <link href="https://crackfree.github.io/2016/09/04/cat-x-iso-to-dev-sdX-mechanism/"/>
    <id>https://crackfree.github.io/2016/09/04/cat-x-iso-to-dev-sdX-mechanism/</id>
    <published>2016-09-03T18:03:30.000Z</published>
    <updated>2016-09-12T15:58:49.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;cat-x-iso-gt-dev-sdX-启动原理&quot;&gt;&lt;a href=&quot;#cat-x-iso-gt-dev-sdX-启动原理&quot; class=&quot;headerlink&quot; title=&quot;cat x.iso &amp;gt;  /dev/sdX 启动原理&quot;&gt;&lt;/a&gt;cat x.iso &amp;gt;  /dev/sdX 启动原理&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;之前在U盘装系统的时，“刻录”U盘常用命令cat xx.iso &amp;gt; /dev/sdX（其实用dd也可以），xx.iso为要“刻录”的系统，sdX为U盘在系统中的设备文件名。执行命令后，U盘变为一个自带引导，包含iso内内容的操作系统安装盘。个人觉得能自带引导比较神奇，于是有了本文。&lt;/p&gt;
&lt;h2 id=&quot;原理分析&quot;&gt;&lt;a href=&quot;#原理分析&quot; class=&quot;headerlink&quot; title=&quot;原理分析&quot;&gt;&lt;/a&gt;原理分析&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;ISO是一种文件系统格式，其他的如ext4、ntfs、fat。ISO格式可以作为一种镜像文件，文件系统自身可带引导功能。cat/dd命令只是将文件系统镜像拷贝到Ｕ盘设备上。&lt;br&gt;&lt;br&gt;ISO文件自身的引导，可由特殊工具创建的，比如说isohybrid，可将引导程序写入镜像文件前几个扇区，iso9660标准一般不会使用开始的几个用来引导的扇区，使iso镜像可以有引导功能。这也解释通了光盘为什么可以引导(光盘自身是ISO格式)。任何设备在Linux中都被抽象为文件，cat xx.iso &amp;gt; /dev/sdX将ISO中的内容输出重定向到设备上，从而完成了拷贝。在这个过程中，cat对iso文件没有任何处理，仅仅是数据拷贝。&lt;br&gt;&lt;br&gt;同理，也可以创建一个ext4格式的文件镜像然后cat　ext4file &amp;gt; sdX 完成对sdX硬盘的格式化和数据写入。&lt;/p&gt;
&lt;h2 id=&quot;参考文献&quot;&gt;&lt;a href=&quot;#参考文献&quot; class=&quot;headerlink&quot; title=&quot;参考文献&quot;&gt;&lt;/a&gt;参考文献&lt;/h2&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://unix.stackexchange.com/questions/31537/how-why-does-cat-write-a-bootable-iso-to-a-device&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://unix.stackexchange.com/questions/31537/how-why-does-cat-write-a-bootable-iso-to-a-device&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://unix.stackexchange.com/questions/48267/what-happens-when-i-do-cat-debian-iso-dev-sdx&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://unix.stackexchange.com/questions/48267/what-happens-when-i-do-cat-debian-iso-dev-sdx&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;cat-x-iso-gt-dev-sdX-启动原理&quot;&gt;&lt;a href=&quot;#cat-x-iso-gt-dev-sdX-启动原理&quot; class=&quot;headerlink&quot; title=&quot;cat x.iso &amp;gt;  /dev/sdX 启动原理&quot;&gt;&lt;/a&gt;cat x.i
    
    </summary>
    
    
      <category term="linux" scheme="https://crackfree.github.io/tags/linux/"/>
    
      <category term="ISO" scheme="https://crackfree.github.io/tags/ISO/"/>
    
  </entry>
  
  <entry>
    <title>vim切换权限用root保存文件</title>
    <link href="https://crackfree.github.io/2016/05/15/vim-save-root-file-with-non-root-user/"/>
    <id>https://crackfree.github.io/2016/05/15/vim-save-root-file-with-non-root-user/</id>
    <published>2016-05-15T07:37:06.000Z</published>
    <updated>2016-05-15T08:55:55.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;用vim时，经常会出现编辑完文件没权限保存。难到要重新敲一遍？&lt;/p&gt;
&lt;h2 id=&quot;解决方法&quot;&gt;&lt;a href=&quot;#解决方法&quot; class=&quot;headerlink&quot; title=&quot;解决方法&quot;&gt;&lt;/a&gt;解决方法&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;在vim状态，直接用&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;:w !sudo tee %
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;或&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:w !sudo sh -c &amp;quot;cat &amp;gt; %&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;命令详解：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;w: 将所有行输出&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;!:vim里执行命令&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;sudo：切换成root执行&lt;/li&gt;
&lt;li&gt;tee：重定向输出多个文件&lt;/li&gt;
&lt;li&gt;%：vim里表示当前文件&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;可以添加下面其中一条到/etc/vim/vimrc ，之后vim里直接用w!!即可切换成root保存了&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;cmap w!! w !sudo tee &amp;gt; /dev/null %
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;或&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cmap w!! w !sudo sh -c &amp;quot;cat &amp;gt; %&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;或&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;command -nargs=? w!! :w !sudo tee %
&lt;/code&gt;&lt;/pre&gt;&lt;ol&gt;
&lt;li&gt;用sudo vim 编辑把之前的全都复制进去，或保存到一个临时文件再sudo mv 回去。（太麻烦不推荐）&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;用vim时，经常会出现编辑完文件没权限保存。难到要重新敲一遍？&lt;/p&gt;
&lt;h2 id=&quot;解决方法&quot;&gt;&lt;a href=&quot;#解决方法&quot;
    
    </summary>
    
    
      <category term="vim" scheme="https://crackfree.github.io/tags/vim/"/>
    
  </entry>
  
  <entry>
    <title>VPS上使用haproxy和iptables进行代理中转与端口转发</title>
    <link href="https://crackfree.github.io/2016/05/15/haproxy-or-iptables-forward-ports-on-VPS/"/>
    <id>https://crackfree.github.io/2016/05/15/haproxy-or-iptables-forward-ports-on-VPS/</id>
    <published>2016-05-15T04:58:06.000Z</published>
    <updated>2016-10-01T14:32:42.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;因为A VPS上装了锐速，另B VPS上配置了代理。A的链路好，而A上配置代理有坑。因此想办法把两者的有点结合起来，做一个端口转发将A的端口转发至B，来提升代理的速度。&lt;br&gt;此时网络连接链路变为:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Me &amp;lt;--&amp;gt; A&amp;lt;--&amp;gt;B&amp;lt;--&amp;gt; Internet
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;现在有两种方案：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;haproxy  &lt;/li&gt;
&lt;li&gt;iptables  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;haproxy:&lt;br&gt;优点：效率高&lt;br&gt;缺点：配置比第二种复杂&lt;/p&gt;
&lt;p&gt;iptables:&lt;br&gt;优点：配置简单，不用装软件&lt;br&gt;缺点：效率不如第一种高&lt;/p&gt;
&lt;h2 id=&quot;haproxy配置方法&quot;&gt;&lt;a href=&quot;#haproxy配置方法&quot; class=&quot;headerlink&quot; title=&quot;haproxy配置方法&quot;&gt;&lt;/a&gt;haproxy配置方法&lt;/h2&gt;&lt;h3 id=&quot;haproxy-介绍&quot;&gt;&lt;a href=&quot;#haproxy-介绍&quot; class=&quot;headerlink&quot; title=&quot;haproxy 介绍&quot;&gt;&lt;/a&gt;haproxy 介绍&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;HAProxy is a free, very fast and reliable solution offering high availability, load balancing, and proxying for TCP and HTTP-based applications. It is particularly suited for very high traffic web sites and powers quite a number of the world’s most visited ones. Over the years it has become the de-facto standard opensource load balancer, is now shipped with most mainstream Linux distributions, and is often deployed by default in cloud platforms. Since it does not advertise itself, we only know it’s used when the admins report it :-)&lt;br&gt;&lt;img src=&quot;http://www.haproxy.org/img/haproxy-pmode.png&quot; alt=&quot;&quot;&gt;  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://www.haproxy.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;项目官网&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;PS:这么强悍的软件用来当中转有点浪费。&lt;/p&gt;
&lt;p&gt;安装&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;yum install haproxy
vim /etc/haproxy/haproxy.cfg
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;将配置文件替换如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;global
        ulimit-n  51200

defaults
        log global
        mode    tcp
        option  dontlognull
        contimeout 1000
        clitimeout 150000
        srvtimeout 150000
        #上面這一塊內容即將失效，需要更換為
        #timeout connect 1000
        #timeout client  150000
        #timeout server 150000

frontend ss-in
        bind *:8388
        default_backend ss-out

backend ss-out
        server server1 US_VPS_IP:8388 maxconn 20480 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;将backend ss-out下面US_VPS_IP 改为要转发到的远程IP和端口，将frontend ss-in下面 bind *:8388改为本地要监听的端口  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;启动与开机启动haproxy        &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;service haproxy start
systemctl enable haproxy
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;此时是以root身份启动，想以nobody身份运行。将下面保存为/root/haproxy.sh，后将文件加入/etc/rc.local作为开机启动。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#! /bin/bash
ulimit-n  51200
sudo -u nobody haproxy /etc/haproxy/haproxy.cfg
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果你想进一步折腾haproxy可以参考&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://linux.die.net/man/1/haproxy&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://linux.die.net/man/1/haproxy&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.linuxidc.com/wap.aspx?nid=118968&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.linuxidc.com/wap.aspx?nid=118968&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;iptables配置&quot;&gt;&lt;a href=&quot;#iptables配置&quot; class=&quot;headerlink&quot; title=&quot;iptables配置&quot;&gt;&lt;/a&gt;iptables配置&lt;/h2&gt;&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;vim /etc/sysctl.conf
添加：
net.ipv4.ip_forward=1
sysctl -p /etc/sysctl.conf

A 88端口  -&amp;gt; B:8888端口:
iptables -t nat -A PREROUTING -d A -p tcp --dport 88 -j DNAT --to-destination B:8888

将发到8888端口的包，IP伪装成A
iptables -t nat -A POSTROUTING -d B -p tcp --dport 8888 -j SNAT --to A
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;haproxy和iptables不仅可以用于前言中的转发用途，还可以用做国内VPS到国外VPS的中转来提升速度&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;因为A VPS上装了锐速，另B VPS上配置了代理。A的链路好，而A上配置代理有坑。因此想办法把两者的有点结合起来，做一个端口转发
    
    </summary>
    
    
      <category term="haproxy" scheme="https://crackfree.github.io/tags/haproxy/"/>
    
      <category term="iptables" scheme="https://crackfree.github.io/tags/iptables/"/>
    
      <category term="VPS" scheme="https://crackfree.github.io/tags/VPS/"/>
    
  </entry>
  
  <entry>
    <title>Linux 更新出现 Hash Sum mismatch 错误解决</title>
    <link href="https://crackfree.github.io/2016/04/30/Linux-update-error-Hash-Sum-mismatch-resolved/"/>
    <id>https://crackfree.github.io/2016/04/30/Linux-update-error-Hash-Sum-mismatch-resolved/</id>
    <published>2016-04-30T06:49:44.000Z</published>
    <updated>2016-04-30T07:58:20.000Z</updated>
    
    <content type="html">&lt;p&gt;linux 更新时，出现如下错误:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;W: Failed to fetch ****** Hash Sum mismatch,&lt;br&gt;E: Some index files failed to download. They have been ignored, or old ones used instead.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;经过google得知出现错误的原因：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;有些ISP缓存了仓库，没有及时更新。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用mirror更新，而mirror没有及时更新&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用如下命令解决：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo rm -rf /var/lib/apt/lists/*
sudo apt-get clean
sudo apt-get update
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;linux 更新时，出现如下错误:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;W: Failed to fetch ****** Hash Sum mismatch,&lt;br&gt;E: Some index files failed to download. They have b
    
    </summary>
    
    
      <category term="linux" scheme="https://crackfree.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>解决fedora下ifconfig命令不见了</title>
    <link href="https://crackfree.github.io/2016/04/02/fedora-ifconfig-command/"/>
    <id>https://crackfree.github.io/2016/04/02/fedora-ifconfig-command/</id>
    <published>2016-04-02T05:08:16.000Z</published>
    <updated>2016-04-16T05:11:02.000Z</updated>
    
    <content type="html">&lt;p&gt;在fedora上发现没有ifconfig、netstat等命令不见了。原因是系统是最小模式安装的，于是有了下面的解决方法：&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;使用以下命令，查找ifconfig属于那个包：&lt;br&gt;&lt;code&gt;sudo dnf provides ifconfig&lt;/code&gt;&lt;br&gt;然后，安装：&lt;br&gt;&lt;code&gt;sudo dnf install net-tools&lt;/code&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在fedora上发现没有ifconfig、netstat等命令不见了。原因是系统是最小模式安装的，于是有了下面的解决方法：&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;使用以下命令，查找ifconfig属于那个包：&lt;br&gt;&lt;code&gt;sudo dnf provides ifconfig&lt;/co
    
    </summary>
    
    
      <category term="linux" scheme="https://crackfree.github.io/tags/linux/"/>
    
      <category term="shell" scheme="https://crackfree.github.io/tags/shell/"/>
    
      <category term="fedora" scheme="https://crackfree.github.io/tags/fedora/"/>
    
  </entry>
  
  <entry>
    <title>ssh使用key登录与禁止使用密码登录</title>
    <link href="https://crackfree.github.io/2016/04/01/using-key-login-ssh-and-forbiden-password-login/"/>
    <id>https://crackfree.github.io/2016/04/01/using-key-login-ssh-and-forbiden-password-login/</id>
    <published>2016-04-01T05:04:46.000Z</published>
    <updated>2016-04-16T05:12:37.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;因为ssh用密码登录不太安全，容易被爆破，使用某些工具登录每次都要输入密码，不方便，所以现在一般都禁止用密码登录，而使用key登录。&lt;/p&gt;
&lt;h2 id=&quot;key创建和设置&quot;&gt;&lt;a href=&quot;#key创建和设置&quot; class=&quot;headerlink&quot; title=&quot;key创建和设置&quot;&gt;&lt;/a&gt;key创建和设置&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;首先，要创建一个key来代替密码，其实就是创建一对公钥、私钥。&lt;br&gt;&lt;code&gt;ssh-keygen -t rsa&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;然后，拷贝公钥到远程要设置的主机上。&lt;br&gt;用法：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Usage: ssh-copy-id [-h|-?|-n] [-i [identity_file]] [-p port] [[-o &lt;ssh -o=&quot;&quot; options=&quot;&quot;&gt;] …] [user@]hostname&lt;/ssh&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;ssh-copy-id -i ~/.ssh/id_rsa -p ssh端口 root@主机ip&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;测试：&lt;br&gt;&lt;code&gt;ssh root@ip #-i 参数加key私钥的路径，如果key的私钥存在其他地方&lt;/code&gt;&lt;br&gt;如果设置正确，现在不用密码直接登录了。&lt;/p&gt;
&lt;h2 id=&quot;禁止密码登录&quot;&gt;&lt;a href=&quot;#禁止密码登录&quot; class=&quot;headerlink&quot; title=&quot;禁止密码登录&quot;&gt;&lt;/a&gt;禁止密码登录&lt;/h2&gt;&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;vim   /etc/ssh/sshd_config
#将PasswordAuthentication yes
#改为PasswordAuthentication no
#将ChallengeResponseAuthentication yes
#改为ChallengeResponseAuthentication no
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后需要重启sshd服务生效&lt;br&gt;&lt;code&gt;service sshd restart&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;题外话&quot;&gt;&lt;a href=&quot;#题外话&quot; class=&quot;headerlink&quot; title=&quot;题外话&quot;&gt;&lt;/a&gt;题外话&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;默认设置ssh为支持key登录，以防万一还是要检查一下&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;RSAAuthentication yes 
PubkeyAuthentication yes
AuthorizedKeysFile .ssh/authorized_keys
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;因为ssh用密码登录不太安全，容易被爆破，使用某些工具登录每次都要输入密码，不方便，所以现在一般都禁止用密码登录，而使用key登录
    
    </summary>
    
    
      <category term="linux" scheme="https://crackfree.github.io/tags/linux/"/>
    
      <category term="ssh" scheme="https://crackfree.github.io/tags/ssh/"/>
    
      <category term="RSA" scheme="https://crackfree.github.io/tags/RSA/"/>
    
  </entry>
  
  <entry>
    <title>Linux下使用hexo在github上搭建博客</title>
    <link href="https://crackfree.github.io/2016/03/04/using-hexo-to-write-blog-on-github/"/>
    <id>https://crackfree.github.io/2016/03/04/using-hexo-to-write-blog-on-github/</id>
    <published>2016-03-04T12:32:13.000Z</published>
    <updated>2016-04-16T05:10:52.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;最近想写一个博客，而github上拥有免费空间，在github上自己搭建博客可以自己高度定制，所以有了此文。(github pages 300M size,) &lt;/p&gt;
&lt;h2 id=&quot;hexo安装和配置&quot;&gt;&lt;a href=&quot;#hexo安装和配置&quot; class=&quot;headerlink&quot; title=&quot;hexo安装和配置&quot;&gt;&lt;/a&gt;hexo安装和配置&lt;/h2&gt;&lt;hr&gt;
&lt;h3 id=&quot;hexo简介&quot;&gt;&lt;a href=&quot;#hexo简介&quot; class=&quot;headerlink&quot; title=&quot;hexo简介&quot;&gt;&lt;/a&gt;hexo简介&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/6375567?v=3&amp;amp;s=400&quot; alt=&quot;hexo&quot;&gt;&lt;/p&gt;
&lt;p&gt;hexo &lt;a href=&quot;https://github.com/hexojs/hexo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;github项目地址&lt;/a&gt; 是一款基于Node.js的轻量级博客框架。它只通过静态页面生成来生成博客。这使得它非常简洁，某些依赖后端的功能如留言，需要调用其他网站的服务来完成。&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Blazing fast generating&lt;/li&gt;
&lt;li&gt;Support for GitHub Flavored Markdown and most Octopress plugins&lt;/li&gt;
&lt;li&gt;One-command deploy to GitHub Pages, Heroku, etc.&lt;/li&gt;
&lt;li&gt;Powerful plugin system&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;预备软件安装&quot;&gt;&lt;a href=&quot;#预备软件安装&quot; class=&quot;headerlink&quot; title=&quot;预备软件安装&quot;&gt;&lt;/a&gt;预备软件安装&lt;/h3&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;Node.js&lt;/li&gt;
&lt;li&gt;git&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#据说安装nodejs 版hexo会有问题，推荐使用此版本&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install nodejs-legacy &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#之后某插件安装会用到，不装生成页面会龟速&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install g++&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;hexo安装&quot;&gt;&lt;a href=&quot;#hexo安装&quot; class=&quot;headerlink&quot; title=&quot;hexo安装&quot;&gt;&lt;/a&gt;hexo安装&lt;/h3&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;hexo安装&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo npm install hexo-cli -g&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#建一个目录，此目录就是日后博客系统存放的地方&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mkdir hexo &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; hexo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm install hexo --save&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#如果命令无法运行，可以尝试更换taobao的npm源&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm install -g cnpm --registry=https://registry.npm.taobao.org&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;博客系统初始化&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#在之前建好的hexo目录下&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo init&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm install&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#安装deployer插件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm install hexo-deployer-git --save&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;测试本地博客与hexo相关操作&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;启动本地博客&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;#在目录下输入命令
hexo s
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;浏览器访问&lt;a href=&quot;http://127.0.0.1:4000/即可查看&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://127.0.0.1:4000/即可查看&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;按ctrl+c先关闭本地的hexo&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;github配置与部署&quot;&gt;&lt;a href=&quot;#github配置与部署&quot; class=&quot;headerlink&quot; title=&quot;github配置与部署&quot;&gt;&lt;/a&gt;github配置与部署&lt;/h2&gt;&lt;hr&gt;
&lt;h3 id=&quot;github简介与申请&quot;&gt;&lt;a href=&quot;#github简介与申请&quot; class=&quot;headerlink&quot; title=&quot;github简介与申请&quot;&gt;&lt;/a&gt;github简介与申请&lt;/h3&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;github简介戳&lt;a href=&quot;https://zh.wikipedia.org/zh/GitHub&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;维基百科&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;github&lt;a href=&quot;https://github.com/join?source=header-home&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;申请&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;建立仓库&quot;&gt;&lt;a href=&quot;#建立仓库&quot; class=&quot;headerlink&quot; title=&quot;建立仓库&quot;&gt;&lt;/a&gt;建立仓库&lt;/h3&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;点击「New Repository」&lt;/li&gt;
&lt;li&gt;填写项目信息&lt;a href=&quot;http://www.pchou.info/web-build/2013/01/05/build-github-blog-page-02.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;详见&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;开启gh-pages功能&quot;&gt;&lt;a href=&quot;#开启gh-pages功能&quot; class=&quot;headerlink&quot; title=&quot;开启gh-pages功能&quot;&gt;&lt;/a&gt;开启gh-pages功能&lt;/h3&gt;&lt;hr&gt;
&lt;p&gt;点击界面右侧的Settings，你将会打开这个库的setting页面，向下拖动，直到看见GitHub Pages,点击Automatic page generator，Github将会自动替你创建出一个gh-pages的页面。&lt;br&gt;如果你的配置没有问题，那么大约15分钟之后，yourname.github.io这个网址就可以正常访问了。&lt;/p&gt;
&lt;h3 id=&quot;配置ssh&quot;&gt;&lt;a href=&quot;#配置ssh&quot; class=&quot;headerlink&quot; title=&quot;配置ssh&quot;&gt;&lt;/a&gt;配置ssh&lt;/h3&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;此处配置ssh key 是为了部署博客时使用&lt;/li&gt;
&lt;li&gt;查看已有ssh key:  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;cat ~/.ssh/id_rsa.pub&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果上面结果为空，生成新的SSH Key:&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ ssh-keygen -t rsa -C &lt;span class=&quot;string&quot;&gt;&quot;mail@mailaddress.com&quot;&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;#此处填写邮箱地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Generating public/private rsa key pair.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Enter file &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;which&lt;/span&gt; to save the key (/home/user/.ssh/id_rsa):  &lt;span class=&quot;comment&quot;&gt;#按回车&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Enter passphrase (empty &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; no passphrase): &lt;span class=&quot;comment&quot;&gt;#输入要设置的密码，也可以留空，设置密码后每次更新都要输入密码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Enter same passphrase again: &lt;span class=&quot;comment&quot;&gt;#再输入设置的密码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Github上添加SSH-Key&quot;&gt;&lt;a href=&quot;#Github上添加SSH-Key&quot; class=&quot;headerlink&quot; title=&quot;Github上添加SSH Key&quot;&gt;&lt;/a&gt;Github上添加SSH Key&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ cat /etc/.ssh/id_rsa.pub&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;复制上面输出的内容,如:&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ssh-rsa &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;省略&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yourmail@yourmail.com&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;在github上，右上角 头像 –&amp;gt; Setting –&amp;gt; SSH Keys –&amp;gt; New SSH Keys,&lt;br&gt;Title 随便写，如 我的博客&lt;br&gt;Key 粘贴上面复制的内容，点下面 Add SSH Keys&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;测试-SSH-Keys&quot;&gt;&lt;a href=&quot;#测试-SSH-Keys&quot; class=&quot;headerlink&quot; title=&quot;测试 SSH Keys&quot;&gt;&lt;/a&gt;测试 SSH Keys&lt;/h3&gt;&lt;hr&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$  ssh -T git@github.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;The authenticity of host &lt;span class=&quot;string&quot;&gt;&#39;github.com (207.97.227.239)&#39;&lt;/span&gt; can&lt;span class=&quot;string&quot;&gt;&#39;t be established.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Are you sure you want to continue connecting (yes/no)? #输入yes&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;以上表示添加key成功了&lt;/p&gt;
&lt;h3 id=&quot;配置Deployment&quot;&gt;&lt;a href=&quot;#配置Deployment&quot; class=&quot;headerlink&quot; title=&quot;配置Deployment&quot;&gt;&lt;/a&gt;配置Deployment&lt;/h3&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;github相关，因为要部署到github上&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git config --global user.name &lt;span class=&quot;string&quot;&gt;&quot;yourname&quot;&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;#Github用户名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git config --global user.email &lt;span class=&quot;string&quot;&gt;&quot;youremail&quot;&lt;/span&gt;   &lt;span class=&quot;comment&quot;&gt;#刚才写的邮箱&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;hexo配置&quot;&gt;&lt;a href=&quot;#hexo配置&quot; class=&quot;headerlink&quot; title=&quot;hexo配置&quot;&gt;&lt;/a&gt;hexo配置&lt;/h2&gt;&lt;hr&gt;
&lt;h3 id=&quot;修改全局配置文件&quot;&gt;&lt;a href=&quot;#修改全局配置文件&quot; class=&quot;headerlink&quot; title=&quot;修改全局配置文件&quot;&gt;&lt;/a&gt;修改全局配置文件&lt;/h3&gt;&lt;hr&gt;
&lt;p&gt;此段落引用自Hexo官方文档&lt;/p&gt;
&lt;p&gt;您可以在&lt;a href=&quot;https://hexo.io/zh-cn/docs/configuration.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;_config.yml&lt;/a&gt;中修改大部份的配置。&lt;/p&gt;
&lt;h2 id=&quot;Hexo-使用与部署&quot;&gt;&lt;a href=&quot;#Hexo-使用与部署&quot; class=&quot;headerlink&quot; title=&quot;Hexo 使用与部署&quot;&gt;&lt;/a&gt;Hexo 使用与部署&lt;/h2&gt;&lt;hr&gt;
&lt;h3 id=&quot;hexo部署至github&quot;&gt;&lt;a href=&quot;#hexo部署至github&quot; class=&quot;headerlink&quot; title=&quot;hexo部署至github&quot;&gt;&lt;/a&gt;hexo部署至github&lt;/h3&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;以下命令即可将已经搭建好的博客部署到github上去，但在这之前需要做其他工作&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo d&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;发表文章&quot;&gt;&lt;a href=&quot;#发表文章&quot; class=&quot;headerlink&quot; title=&quot;发表文章&quot;&gt;&lt;/a&gt;发表文章&lt;/h3&gt;&lt;hr&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo n &amp;quot;你要发布的文章的题目&amp;quot; #如 hexo n &amp;quot;test&amp;quot;,即在博客目录source/_posts/下生成test.md文件，用markdown编辑器编辑此文件即可写博客&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;写完博客后&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo g #生成本地静态页面&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo s #可在本地查看效果&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Markdown简单介绍&quot;&gt;&lt;a href=&quot;#Markdown简单介绍&quot; class=&quot;headerlink&quot; title=&quot;Markdown简单介绍&quot;&gt;&lt;/a&gt;Markdown简单介绍&lt;/h3&gt;&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;Markdown 是一种轻量级标记语言。它允许人们“使用易读易写的纯文本格式编写文档，详细请看(维基百科)[&lt;a href=&quot;https://zh.wikipedia.org/wiki/Markdown]。&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://zh.wikipedia.org/wiki/Markdown]。&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.jianshu.com/p/q81RER&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;markdown新手入门&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://wowubuntu.com/markdown/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;markdown详细语法&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;hexo部署至github-1&quot;&gt;&lt;a href=&quot;#hexo部署至github-1&quot; class=&quot;headerlink&quot; title=&quot;hexo部署至github&quot;&gt;&lt;/a&gt;hexo部署至github&lt;/h3&gt;&lt;p&gt;&lt;code&gt;$ hexo d&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;此时打开&lt;a href=&quot;http://你的用户名.github.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://你的用户名.github.io&lt;/a&gt;,即可查看效果了&lt;/p&gt;
&lt;h2 id=&quot;推荐阅读&quot;&gt;&lt;a href=&quot;#推荐阅读&quot; class=&quot;headerlink&quot; title=&quot;推荐阅读&quot;&gt;&lt;/a&gt;推荐阅读&lt;/h2&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://hexo.io/zh-cn/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo官方文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://hexo.io/plugins/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo插件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://hexo.io/themes/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo主题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.jianshu.com/p/q81RER&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;markdown新手入门&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://wowubuntu.com/markdown/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;markdown语法说明&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;最近想写一个博客，而github上拥有免费空间，在github上自己搭建博客可以自己高度定制，所以有了此文。(github pag
    
    </summary>
    
    
      <category term="hexo" scheme="https://crackfree.github.io/tags/hexo/"/>
    
      <category term="github" scheme="https://crackfree.github.io/tags/github/"/>
    
      <category term="blog" scheme="https://crackfree.github.io/tags/blog/"/>
    
  </entry>
  
</feed>
